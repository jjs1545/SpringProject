<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC ".//mybatis.org//DTD Mapper 1.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="post">
	<insert id="postInsert" parameterType="postvo">
		<![CDATA[
			INSERT INTO post
			VALUES (#{no},#{category_no},#{title},#{content},now())
		]]>
	</insert>
	
	<!-- 포스트 선택 시 포스트 가져오기 -->
	<select id="selectPost" parameterType="int" resultType="postvo">
		<![CDATA[
			SELECT *
			FROM post
			WHERE no = #{idx}
		]]>
	</select>
	
	
	<!-- category 별 해당 최신 포스트 가져오기 -->
	<select id="getPost" parameterType="int" resultType="postvo">
		<![CDATA[
			SELECT *
			FROM post
			WHERE category_no = #{idx}
			ORDER BY reg_date desc
			limit 1;
		]]>
	</select>
	
	<!-- category 별 post_count 가져오기 -->
	<!-- <select id="getPost" parameterType="int" resultType="categoryvo">
		<![CDATA[
			SELECT count(*) as post_count
			FROM post p, category c
			WHERE p.category_no = c.no AND c.no=#{idx}
			ORDER BY p.reg_date DESC;
		]]>
	</select> -->
	
	<!-- category 별 해당 포스트 리스트 가져오기 -->
	<select id="getPostList" parameterType="int" resultType="postvo">
		<![CDATA[
			SELECT *
			FROM post
			WHERE category_no = #{idx}
			ORDER BY reg_date desc
		]]>
	</select>
	
	<!-- category 별 해당 포스트 리스트 가져오기 페이징 처리 -->
	
	<select id="getcPostPageCount" resultType="pagingvo">
		<![CDATA[
			SELECT tot, tot div #{logsPerPage} as maxPage, tot mod #{logsPerPage} as remains
			FROM (SELECT count(*) tot FROM post where category_no=#{idx}) t;
		]]>
	</select>
	
	
	<select id="getcPostListPage" resultType="postvo">
		<![CDATA[
			SELECT *
			FROM post
			WHERE category_no = #{idx}
			ORDER BY reg_date desc
			LIMIT #{startPos}, #{logsPerPage};
		]]>
	</select>
	
	<!-- /////////////////////////////////////// -->
	
	<!-- 사용자, 카테고리별 포스트  리스트-->
	<!-- <select id="getUserPost" parameterType="int" resultType="postvo">
		<![CDATA[
			select *
			from post
			where category_no = (select no
								from category
								where blog_no=#{idx}
								order by reg_date desc
								limit 1)
			order by reg_date desc
		]]>
	</select> -->
	
	
	
	
	
	<!-- 카테고리 별 가장 최근 업데이트 된 포스트 -->
	<select id="getlastPost" resultType="postvo">
		<![CDATA[
			select p.no as no, p.category_no as category_no, p.title as title, p.content as content, p.reg_date as reg_date
			from post p, category c
			where c.no=p.category_no AND blog_no=#{idx}
			order by p.reg_date desc
			limit 1;
		]]>
	</select>
			<!-- select *
			from post
			where category_no = (select no
								 from category
								 where blog_no=#{idx}
								 order by reg_date desc
								 limit 1)
		    order by reg_date desc
			limit 1; -->
	
	<!-- 사용자별 모든 포스트  리스트-->
	<select id="getUserPost" parameterType="int" resultType="postvo">
		<![CDATA[
			select p.no as no, p.category_no as category_no, p.title as title, p.content as content, p.reg_date as reg_date
			from post p, category c
			where p.category_no = c.no AND c.blog_no=#{idx}
			order by p.reg_date desc;
		]]>
	</select>
	
	<!-- 사용자별 모든 포스트  리스트 페이징 처리 -->
	
	<select id="getMaxPageCount" resultType="pagingvo">
		<![CDATA[
			SELECT tot, tot div #{logsPerPage} as maxPage, tot mod #{logsPerPage} as remains
			FROM (SELECT count(*) tot FROM post p,category c where p.category_no=c.no AND blog_no=#{idx}) t;
		]]>
	</select>
	
	
	<select id="getContentListByPage" resultType="postvo">
		<![CDATA[
			select p.no as no, p.category_no as category_no, p.title as title, p.content as content, p.reg_date as reg_date
			from post p, category c
			where p.category_no = c.no AND c.blog_no=#{idx}
			order by p.reg_date desc
			LIMIT #{startPos}, #{logsPerPage};
		]]>
	</select>
	
	<!-- SELECT *
		FROM post 
		ORDER BY reg_date DESC
		LIMIT #{startPos}, #{logsPerPage}; -->	
</mapper>